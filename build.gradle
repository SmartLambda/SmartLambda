import org.apache.tools.ant.taskdefs.condition.Os

plugins {
    id 'de.fuerstenau.buildconfig' version '1.1.7'
}

group 'edu.teco'
version '1.0-SNAPSHOT'

apply plugin: 'application'
apply plugin: 'idea'

//noinspection GroovyUnusedAssignment
mainClassName = "edu.teco.smartlambda.Application"
//noinspection GroovyUnusedAssignment
sourceCompatibility = 1.8

idea {
    module {
        sourceDirs += file("build/gen/buildconfig/src/main")
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // runtime dependencies
    compile 'com.sparkjava:spark-core:2.5.4'
    compile group: 'com.google.guava', name: 'guava', version: '19.0'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.0'
    compile 'org.apache.commons:commons-configuration2:2.1'
    compile 'commons-beanutils:commons-beanutils:1.9.3'
    compile group: 'org.quartz-scheduler', name: 'quartz', version: '2.2.1'
    compile 'org.hibernate:hibernate-core:5.2.7.Final'
    compile 'org.hibernate:hibernate-c3p0:5.2.7.Final'
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.6'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.8.6'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.6'
    compile'org.torpedoquery:org.torpedoquery:1.7.0'
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.23'
    compile group: 'com.spotify', name: 'docker-client', version:'7.0.2'
    compile 'de.mkammerer:argon2-jvm:2.2'

    // compile time dependencies
    compileOnly "org.projectlombok:lombok:1.16.12"

    // test dependencies
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile "org.mockito:mockito-core:2.7.4"
}

buildConfig {
    appName = project.name
    version = project.version
    packageName = project.group + "." + "smartlambda"
    if(Os.isFamily(Os.FAMILY_WINDOWS)) {
        buildConfigField "String", "CONFIGURATION_PATH", "C:\\\\smartlambda\\\\smartlambda.xml"
        buildConfigField "String", "HIBERNATE_CONFIGURATION_PATH", "C:\\\\smartlambda\\\\hibernate.xml"
    } else {
        buildConfigField "String", "CONFIGURATION_PATH", "/etc/smartlambda/smartlambda.xml"
        buildConfigField "String", "HIBERNATE_CONFIGURATION_PATH", "/etc/smartlambda/hibernate.xml"
    }
}